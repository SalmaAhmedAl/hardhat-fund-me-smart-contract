{
  "address": "0x8eCA3D7d50341ace682c66f160bB00E10BdFf6e9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xa0fb394a22fc695856b630e4a81c63d393ee46911939fd9a2aec0e2e9e8f8782",
  "receipt": {
    "to": null,
    "from": "0xBA11dC96513F4433b774D7F82c2Dc766d788e647",
    "contractAddress": "0x8eCA3D7d50341ace682c66f160bB00E10BdFf6e9",
    "transactionIndex": 20,
    "gasUsed": "813599",
    "logsBloom": "0x
    "blockHash": "0xd4d8933f0dbfc93303ed8f43d5cc6ccb34dcaafda08521e0e90372ebf4ad7cbc",
    "transactionHash": "0xa0fb394a22fc695856b630e4a81c63d393ee46911939fd9a2aec0e2e9e8f8782",
    "logs": [],
    "blockNumber": 3302967,
    "cumulativeGasUsed": "1747028",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "82751bd6694242bffdce66604fd7f722",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.7;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n\\nerror NotOwner();\\n\\ncontract FundMe{\\n      using PriceConverter for uint256;  //we're using it as a libirary on top of uint256 type \\n    uint256 public constant MINIMUM_USD =50 * 1e18;\\n\\n    address[] public funders;\\n    mapping (address =>uint256) addressToAmountFunded;\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress){\\n      i_owner = msg.sender;\\n      priceFeed= AggregatorV3Interface(priceFeedAddress) ;\\n    }\\n\\n    function fund() public payable{\\n      //How do we send ETH to this contract?\\n      require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"Didn't send enough!\\\");\\n      //18 decimal\\n\\n      funders.push(msg.sender);\\n      addressToAmountFunded[msg.sender] += msg.value;\\n      \\n    }\\n\\n    function withDraw() public onlyOwner{\\n      for(uint256 funderIndex=0 ; funderIndex< funders.length ; funderIndex=funderIndex+1 ){\\n           address funder = funders[funderIndex];\\n           addressToAmountFunded[funder] =0;\\n      }\\n\\n      //reset an array\\n      funders = new address[](0);\\n\\n      // actually withdraw the funds through 3 waaays\\n      // trasfer\\n      //payable(msg.sender).trasfer(address(this).balance);\\n      //send \\n      //bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n     // require(sendSuccess, \\\"Didn't send success!\\\")\\n      //call\\n       (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n      require(callSuccess, \\\"Didn't call success!\\\");\\n    }\\n\\n    modifier onlyOwner{\\n      //require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n      if(msg.sender!= i_owner){\\n        revert NotOwner();\\n      }\\n      _;\\n      //underscore represent the rest of the code will call after this line\\n    }\\n\\n    receive() external payable{\\n      fund();\\n    }\\n    \\n     fallback() external payable{\\n      fund();\\n    }\\n\\n}\",\"keccak256\":\"0x2dc01cce9a1102948cd3b91d3f7cc8c5713674b2f06642ee6cc27f6e7b1adaf3\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter{\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256){\\r\\n        //ABI\\r\\n        (, int256 price,,,) = priceFeed.latestRoundData();\\r\\n        //ETH in terms of USD\\r\\n        //3000.00000000\\r\\n        \\r\\n        //Casting\\r\\n        return uint256(price * 1e10); //1**10 = 10000000000\\r\\n    }\\r\\n\\r\\n    //to validate\\r\\n    function getVersion() internal view returns (uint256){\\r\\n        AggregatorV3Interface priceFeed =AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419);\\r\\n        return priceFeed.version();\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount,\\r\\n     AggregatorV3Interface priceFeed) internal view returns (uint256){\\r\\n        // we get price of ethereum\\r\\n        uint256 ethPrice = getPrice(priceFeed );\\r\\n        //\\r\\n        uint256 ethAmountInUSD = (ethPrice*ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf9f5b0268aaa735e64c021f8368d1e034b67d15a1a904425c69a3ead5d8c0782\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610eba380380610eba833981810160405281019061003291906100c5565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100bf81610129565b92915050565b6000602082840312156100db576100da610124565b5b60006100e9848285016100b0565b91505092915050565b60006100fd82610104565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610132816100f2565b811461013d57600080fd5b50565b60805160601c610d556101656000396000818161028e01526105020152610d556000f3fe6080604052600436106100595760003560e01c80630fdb1c10146100725780636b69a59214610089578063741bef1a146100b4578063b60d4288146100df578063dba6335f146100e9578063dc0d3dff1461011457610068565b3661006857610066610151565b005b610070610151565b005b34801561007e57600080fd5b5061008761028c565b005b34801561009557600080fd5b5061009e6104cd565b6040516100ab9190610903565b60405180910390f35b3480156100c057600080fd5b506100c96104da565b6040516100d691906108a8565b60405180910390f35b6100e7610151565b005b3480156100f557600080fd5b506100fe610500565b60405161010b919061088d565b60405180910390f35b34801561012057600080fd5b5061013b6004803603810190610136919061073a565b610524565b604051610148919061088d565b60405180910390f35b6802b5e3af16b1880000610190600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056390919063ffffffff16565b10156101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c8906108e3565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610283919061093a565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103bd57600080828154811061033657610335610c22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816103b6919061093a565b9050610314565b50600067ffffffffffffffff8111156103d9576103d8610c51565b5b6040519080825280602002602001820160405280156104075781602001602082028036833780820191505090505b506000908051906020019061041d92919061063f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044490610878565b60006040518083038185875af1925050503d8060008114610481576040519150601f19603f3d011682016040523d82523d6000602084013e610486565b606091505b50509050806104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906108c3565b60405180910390fd5b50565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061056f8361059f565b90506000670de0b6b3a764000085836105889190610ad8565b6105929190610990565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610767565b5050509150506402540be4008161063791906109c1565b915050919050565b8280548282559060005260206000209081019282156106b8579160200282015b828111156106b75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061065f565b5b5090506106c591906106c9565b5090565b5b808211156106e25760008160009055506001016106ca565b5090565b6000815190506106f581610cda565b92915050565b60008135905061070a81610cf1565b92915050565b60008151905061071f81610cf1565b92915050565b60008151905061073481610d08565b92915050565b6000602082840312156107505761074f610c80565b5b600061075e848285016106fb565b91505092915050565b600080600080600060a0868803121561078357610782610c80565b5b600061079188828901610725565b95505060206107a2888289016106e6565b94505060406107b388828901610710565b93505060606107c488828901610710565b92505060806107d588828901610725565b9150509295509295909350565b6107eb81610b32565b82525050565b6107fa81610b8e565b82525050565b600061080d601483610929565b915061081882610c85565b602082019050919050565b600061083060008361091e565b915061083b82610cae565b600082019050919050565b6000610853601383610929565b915061085e82610cb1565b602082019050919050565b61087281610b6e565b82525050565b600061088382610823565b9150819050919050565b60006020820190506108a260008301846107e2565b92915050565b60006020820190506108bd60008301846107f1565b92915050565b600060208201905081810360008301526108dc81610800565b9050919050565b600060208201905081810360008301526108fc81610846565b9050919050565b60006020820190506109186000830184610869565b92915050565b600081905092915050565b600082825260208201905092915050565b600061094582610b6e565b915061095083610b6e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098557610984610bc4565b5b828201905092915050565b600061099b82610b6e565b91506109a683610b6e565b9250826109b6576109b5610bf3565b5b828204905092915050565b60006109cc82610b44565b91506109d783610b44565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a1657610a15610bc4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a5357610a52610bc4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610a9057610a8f610bc4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610acd57610acc610bc4565b5b828202905092915050565b6000610ae382610b6e565b9150610aee83610b6e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b2757610b26610bc4565b5b828202905092915050565b6000610b3d82610b4e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610b9982610ba0565b9050919050565b6000610bab82610bb2565b9050919050565b6000610bbd82610b4e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742063616c6c207375636365737321000000000000000000000000600082015250565b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b610ce381610b44565b8114610cee57600080fd5b50565b610cfa81610b6e565b8114610d0557600080fd5b50565b610d1181610b78565b8114610d1c57600080fd5b5056fea26469706673582212208b428656c206f8f72fb40ca541146185953bb9103fea6e84a97507a6838ae2d364736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80630fdb1c10146100725780636b69a59214610089578063741bef1a146100b4578063b60d4288146100df578063dba6335f146100e9578063dc0d3dff1461011457610068565b3661006857610066610151565b005b610070610151565b005b34801561007e57600080fd5b5061008761028c565b005b34801561009557600080fd5b5061009e6104cd565b6040516100ab9190610903565b60405180910390f35b3480156100c057600080fd5b506100c96104da565b6040516100d691906108a8565b60405180910390f35b6100e7610151565b005b3480156100f557600080fd5b506100fe610500565b60405161010b919061088d565b60405180910390f35b34801561012057600080fd5b5061013b6004803603810190610136919061073a565b610524565b604051610148919061088d565b60405180910390f35b6802b5e3af16b1880000610190600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056390919063ffffffff16565b10156101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c8906108e3565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610283919061093a565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610311576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103bd57600080828154811061033657610335610c22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506001816103b6919061093a565b9050610314565b50600067ffffffffffffffff8111156103d9576103d8610c51565b5b6040519080825280602002602001820160405280156104075781602001602082028036833780820191505090505b506000908051906020019061041d92919061063f565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161044490610878565b60006040518083038185875af1925050503d8060008114610481576040519150601f19603f3d011682016040523d82523d6000602084013e610486565b606091505b50509050806104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906108c3565b60405180910390fd5b50565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061053457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061056f8361059f565b90506000670de0b6b3a764000085836105889190610ad8565b6105929190610990565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610767565b5050509150506402540be4008161063791906109c1565b915050919050565b8280548282559060005260206000209081019282156106b8579160200282015b828111156106b75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061065f565b5b5090506106c591906106c9565b5090565b5b808211156106e25760008160009055506001016106ca565b5090565b6000815190506106f581610cda565b92915050565b60008135905061070a81610cf1565b92915050565b60008151905061071f81610cf1565b92915050565b60008151905061073481610d08565b92915050565b6000602082840312156107505761074f610c80565b5b600061075e848285016106fb565b91505092915050565b600080600080600060a0868803121561078357610782610c80565b5b600061079188828901610725565b95505060206107a2888289016106e6565b94505060406107b388828901610710565b93505060606107c488828901610710565b92505060806107d588828901610725565b9150509295509295909350565b6107eb81610b32565b82525050565b6107fa81610b8e565b82525050565b600061080d601483610929565b915061081882610c85565b602082019050919050565b600061083060008361091e565b915061083b82610cae565b600082019050919050565b6000610853601383610929565b915061085e82610cb1565b602082019050919050565b61087281610b6e565b82525050565b600061088382610823565b9150819050919050565b60006020820190506108a260008301846107e2565b92915050565b60006020820190506108bd60008301846107f1565b92915050565b600060208201905081810360008301526108dc81610800565b9050919050565b600060208201905081810360008301526108fc81610846565b9050919050565b60006020820190506109186000830184610869565b92915050565b600081905092915050565b600082825260208201905092915050565b600061094582610b6e565b915061095083610b6e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098557610984610bc4565b5b828201905092915050565b600061099b82610b6e565b91506109a683610b6e565b9250826109b6576109b5610bf3565b5b828204905092915050565b60006109cc82610b44565b91506109d783610b44565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a1657610a15610bc4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a5357610a52610bc4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610a9057610a8f610bc4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610acd57610acc610bc4565b5b828202905092915050565b6000610ae382610b6e565b9150610aee83610b6e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b2757610b26610bc4565b5b828202905092915050565b6000610b3d82610b4e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610b9982610ba0565b9050919050565b6000610bab82610bb2565b9050919050565b6000610bbd82610b4e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742063616c6c207375636365737321000000000000000000000000600082015250565b50565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b610ce381610b44565b8114610cee57600080fd5b50565b610cfa81610b6e565b8114610d0557600080fd5b50565b610d1181610b78565b8114610d1c57600080fd5b5056fea26469706673582212208b428656c206f8f72fb40ca541146185953bb9103fea6e84a97507a6838ae2d364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}